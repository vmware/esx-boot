#!/bin/sh
#*******************************************************************************
# Copyright (c) 2008-2022 Broadcom. All Rights Reserved.
# The term "Broadcom" refers to Broadcom Inc. and/or its subsidiaries.
# SPDX-License-Identifier: GPL-2.0
#*******************************************************************************

copyright='#*******************************************************************************
# Copyright (c) 2008-2022 Broadcom. All Rights Reserved.
# The term "Broadcom" refers to Broadcom Inc. and/or its subsidiaries.
# SPDX-License-Identifier: GPL-2.0
#*******************************************************************************
'

toolchain='#
# Tool chain definitions.
#

# Delete this line once the tool chain is setup.
$(error Please setup your toolchain in env/toolchain.mk)

#=============================================================
# Host definitions. Used to compile tools that run on the
# host during the build, such as uefi/elf2efi and bios/relocs.
#=============================================================

HOST_CC         := <Path to host gcc>
HOST_CFLAGS     :=
HOST_LIBCRYPTO  := <Path to host libcrypto.so>

#=============================================================
# Target definitions.
#=============================================================

ifeq ($(BUILDENV),uefiarm64)
GCCROOT := <Path to aarch64 gcc sysroot>
CC      := <Path to aarch64 gcc>
LD      := <Path to aarch64 ld>
AR      := <Path to aarch64 ar>
OBJCOPY := <Path to aarch64 objcopy>
else
#
# Known to work with gcc 4.8.0, nasm 2.01, and binutils 2.22
#
GCCROOT := <Path to x86/x86_64 gcc sysroot>
CC      := <Path to x86/x86_64 gcc>
LD      := <Path to x86/x86_64 ld>
AR      := <Path to x86/x86_64 ar>
OBJCOPY := <Path to x86/x86_64 objcopy>
AS      := <Path to nasm>
endif'

makfile='#
# Master Makefile
#

# Option: 0 to link crypto into mboot; 1 to use a separate module.
export CRYPTO_MODULE := 1

include env/common.mk

SUBDIRS := com32 uefi64 # uefiarm64

TOPDIR := $(CURDIR)
export TOPDIR

.PHONY: all clean $(SUBDIRS)

all: $(SUBDIRS)

com32:
	$(MAKE) -f Makefile.main BUILDENV=$@

# KEY is a list of one or more keys that .efi binaries produced by
# this package are signed with, for UEFI Secure Boot purposes,
# separated by '+' signs.
#
# EKEY may be either "test" or "official".  It selects which
# list of public keys is embedded in mboot.  When booting in Secure Boot
# mode, early bootbank modules must be signed with one of the embedded
# keys. See mboot/secure.c for details.
#
uefi64 uefi32 uefiarm64:
	$(MAKE) -f Makefile.main BUILDENV=$@ \
		KEY=test_sb2017 EKEY=test
	$(MAKE) -f Makefile.main BUILDENV=$@ \
		KEY=test_sb2017 EKEY=official

clean:
	$(MAKE) -f Makefile.main clean'

write_config()
{
    if [ -f $2 ]; then
        return 1
    fi

    echo "${copyright}" > $2
    echo "$1" >> $2

    return 0
}

echo "Configuring the build system"
echo ""

echo -n "     Makefile...  "
if write_config "${makfile}" Makefile; then
    echo "Created"
else
    echo "Already exists"
fi

echo -n "     Toolchain...  "
if write_config "${toolchain}" env/toolchain.mk; then
    config="SETUP"
    echo "Created"
else
    config="VERIFY"
    echo "Already exists"
fi

echo ""
echo "PLEASE ${config} YOUR TOOL CHAIN IN env/toolchain.mk"
